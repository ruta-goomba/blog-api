user  ubuntu;

worker_processes  1;

error_log  /var/log/nginx/error.log; #error_log  logs/error.log  notice;

pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
    # worker_processes and worker_connections allows you to calculate maxclients value:
    # max_clients = worker_processes * worker_connections
}


http {
    include       mime.types;

    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" "$http_user"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        off;

    #tcp_nopush     on;
    # works opposite to tcp_nodelay. Instead of optimizing delays, it optimizes the amount of data sent at once.

    keepalive_timeout  65;

    gzip  on;

    server {
        listen       80;

        server_name  ec2-52-50-140-88.eu-west-1.compute.amazonaws.com;

        access_log  /var/log/nginx/access.log  main;

        location ~ (\.php|.aspx|.asp|admin) {
          return 404;
        }

        location / {
          proxy_pass http://127.0.0.1:3000;
        }
    }

    server {
        listen       5001;

        server_name  ec2-52-50-140-88.eu-west-1.compute.amazonaws.com;

        access_log  /var/log/nginx/access.log  main;

        location ~ (\.php|.aspx|.asp|admin) {
          return 404;
        }

        location / {
          # only allow POST requests that have User header set to rg-blog
          if ($request_method = POST) {
            set $req  P;
          }

          if ($http_user !~* (rg-blog)) {
            set $req  "${req}C";
          }

          if ($req = PC) {
            return 403;
          }
          proxy_pass http://127.0.0.1:5000$request_uri;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        #error_page   500 502 503 504  /50x.html;
        #location = /50x.html {
        #    root   html;
        #}
    }
}